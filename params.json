{"name":"Linux logo","tagline":"Prints an ASCII logo and some system info","body":"/*--------------------------------------------------------------------------*\\\r\n    LINUX_LOGO 5.11 -- Shows a Logo With some System Info - 15 November 2010\r\n    by Vince Weaver ( vince _at_ deater.net, http://www.deater.net/weave )\r\n    SUPPORTS Linux (most architectures) and some non-Linux OSes\r\n\\*--------------------------------------------------------------------------*/\r\n\r\nHISTORY: \r\n  \r\n   Back in the summer of 1997 there was a recurring topic on the linux-kernel\r\n   list about having a \"boot-up\" penguin on all architectures. There \r\n   were many arguments back and forth, but eventually the primary consensus \r\n   was that this would be better done in user-space.  [Eventually the fbcon \r\n   people snuck it in anyway].  In any case, those of us running on text\r\n   consoles wanted a penguin too, and barring some attempts to use a vga-font \r\n   hack to get one displayed, the best way to get this was a user-space\r\n   text-mode program.\r\n   \r\n   I used a ppm of the Linux penguin and a ppm2ansi converter from \r\n   Rasterman [www.rasterman.com], and then touched it up with a trial \r\n   version of THEDRAW under DosEmu.  Dredging up some talents left\r\n   over from my Ansi-art BBS days I eventually hacked together a rough \r\n   likeness of Ewing's Linux Penguin.  I added some system info from \r\n   /proc, and linux_logo was born.\r\n   \r\n   The program itself has grown more \"feature-full\" as people around the\r\n   world send in their patches.  The newer versions are primarily minor\r\n   cosmetic fixes.  But I get a lot of positive feedback from this tiny\r\n   little program I created one summer day........\r\n\r\n-----------------------------------------------------------------------\r\nCONFIG FILES\r\n-----------------------------------------------------------------------\r\n\r\n  As of 3.9b5 linux_logo now reads ~/.linux_logo [that is, the\r\n     hidden file .linux_logo in your home directory] and\r\n     /etc/linux_logo.conf before parsing the command line options.\r\n     \r\n  The format of the config files is a bit of a hack.  Just put in the\r\n  file the command line options you want passed to linux_logo.\r\n    \r\n  Thus if you put in ~/.linux_logo\r\n  \r\n-a -c -F \"Linux Logo on a #M Mhz Machine\"\r\n\r\n  Then when you run \"linux_logo\" it will automatically show an ASCII classic\r\n  logo with the formatting command applied.\r\n  \r\n  This is a bit ugly, but is was simpler and [at the time] seemed more elegant\r\n  than writing a separate dot file parser....\r\n \r\n----------------------------------------------------------------------->\r\nPOTENTIAL USES FOR linux_logo\r\n----------------------------------------------------------------------->\r\n\r\n   There are so many uses, I split them off into a separate \"USAGE\" file.\r\n   \r\n\r\n ----------------------------------------------------------------------->\r\n QUICKLY INSTALLING linux_logo\r\n ----------------------------------------------------------------------->\r\n \r\n    untar and uncompress the file\r\n        tar -xzvf linux_logo-5.11.tar.gz\r\n\t\r\n    enter the directory\r\n        cd linux_logo-5.11\r\n\t\r\n    run \"configure\"\r\n        ./configure\r\n\t\r\n    compile the program\r\n        make\r\n\t\r\n    install (you'll probably want to do this as root) with\r\n        make install\r\n\t\r\n\r\n-------------------------------------------------------------------------->\r\nADVANCED LINUX_LOGO Installation\r\n-------------------------------------------------------------------------->\r\n\r\n   Destination directory:\r\n     \r\n      By default linux_logo is installed under /usr/local/\r\n      \r\n      To change this, run configure with\r\n         \"./configure --prefix=/usr\"\r\n      Where you can replace /usr with any location you want.\r\n\r\n   Picking logos:\r\n\r\n      You can choose which logos are compiled into linux_logo.  \r\n      Many contributed logos can be found in the ./logos directory.\r\n    \r\n      By editing the file logo_config, you can pick which logos are included.\r\n    \r\n      You can create a linux_logo binary with ALL of them\r\n      by doing\r\n    \r\n         make logos-all\r\n       \r\n      Note: this will overwrite the current logo_config, so be careful.\r\n       \r\n      Then use \"linux_logo -L list\" to see them, or \r\n      \"linux_logo -L random\" to randomly go through them\r\n    \r\n   Compile time changes:\r\n   \r\n      Edit the \"defaults.h\" file to change a lot of linux_logo's default\r\n      behaviors.\r\n    \r\n   Translations:\r\n   \r\n      Initial internationalization support has been added.  If you are running\r\n      with the LANGUAGE environmental variable set, and there is a translation\r\n      for your language, then you should get linux_logo in your own tongue.\r\n      \r\n      This can be turned off by changing the USE_I18N option at the top\r\n      of the defaults.h file.\r\n\r\n   Cross compiling:\r\n\r\n      If you are using linux_logo on an embedded system you might\r\n      want to cross compile.  I tried to make this as easy as possible.\r\n   \r\n      For example, to cross-compile for avr32 on x86 (assuming you\r\n      have all of the avr32 cross-compile tools installed) I do this:\r\n   \r\n         env CROSS=avr32-linux- ./configure\r\n         make CROSS=avr32-linux- LDFLAGS=-static ARCH=avr32\r\n       \r\n      And the result is a working avr32 version of linux_logo\r\n\r\n   On non-Linux architectures:\r\n    \r\n      You'll have to use GNU make.  This is often called \"gmake\".\r\n\r\n\r\n\r\n--------------------------------------------------------------------------->\r\nCOMMAND LINE OPTIONS\r\n--------------------------------------------------------------------------->\r\n\r\nUsage:   linux_logo [-a] [-b] [-c] [-d] [-D file] [-e file] [-f] [-F] [-g]\r\n                    [-h] [-i] [-k] [-l] [-n] [-o num] [-p] [-s] [-t str] [-u] [-v]\r\n                    [-w Num] [-x] [-y] [-F format] [-L num | list | random_xx]\r\n         [-a]     -- Display an ascii-only Logo\r\n         [-b]     -- Display a Banner Logo!\r\n         [-c]     -- Display a \"Classic\" type logo\r\n         [-d]     -- disable \"prettying\" of output\r\n         [-D file]-- use custom logo from \"file\"\r\n         [-e file]-- Use \"file\" instead of /proc/cpuinfo [for debugging\r\n         [-f]     -- force the screen clear before drawing\r\n         [-F format] Format output.  See README.\r\n      B  [-g]     -- give system info only\r\n         [-h]     -- this help screen\r\n\t [-i]     -- ignore the ~/.linux_logo and /etc/linux_logo.conf files\r\n\t [-k]\t  -- keep sysinfo flushed-left (non-centered)\r\n      B  [-l]     -- display logo only\r\n      C  [-o Num] -- offset output Num spaces to the right\r\n         [-p]     -- preserve cursor location\r\n         [-s]     -- skip Bogomips [speeds up on non-Linux platforms]\r\n         [-t str] -- display user-supplied string\r\n      *  [-u]     -- show uptime\r\n         [-v]     -- version information\r\n         [-w Num] -- set width of screen to Num [default 80]\r\n      *  [-y]     -- show load average\r\n         [-L ...] -- multiple Logo options.\r\n\r\n B=Banner mode only, C=Classic Mode Only  *=Works Only in Linux\r\n\r\n\r\n\r\nMore detailed explanations:\r\n\r\n[-a]     : This option makes linux_logo output no fancy colors.  This is\r\n           useful if you are viewing linux_logo over a black and white \r\n\t   terminal, or a terminal that can't handle fancy escape sequences\r\n\t   well [like default win95 telnet].\r\n\t   \r\n[-b]     : This option makes linux_logo display the first compiled-in \"banner\" \r\n           style logo.\r\n\t   \r\n[-c]     : This option makes linux_logo display the first compiled-in \r\n           \"classic\" style logo.  Many people prefer this version of the\r\n\t   logo.  I made it myself using some complex manipulation of TheDraw \r\n\t   and the 'official' logo.xpm that comes with the linux_sources.\r\n\t   \r\n[-d]     : This option turns off Megahertz rounding and cpuinfo \"prettying\".\r\n           That is, it prints your /proc/cpuinfo's \"model name\" verbatim,\r\n\t   instead of being clever and making it look nice.\r\n\r\n[-D file]: Use an alternate logo on disk.  Just make sure 'file' points\r\n           to a valid '.logo' file.  Read README.CUSTOM_LOGOS for more\r\n\t   info on how to make these.  Some can be found in the \r\n\t   ./logos directory of the linux_logo distribution.\r\n\r\n[-e file]: Specify an alternate cpuinfo file.  This is only really useful\r\n           if you are debugging a /proc/cpuinfo file that is not from\r\n\t   your own computer.  Theoretically you could also use this to\r\n\t   make your old 386 appear to be a Pentium to users ;)\r\n\r\n[-f]     : This option simply clears the screen before drawing the logo.\r\n\r\n[-F format]: Use this to super-customize the output of the cpuinfo.  You \r\n           pass a string, for example \"#V\\n#U\\n#L\\n\".  See the section\r\n\t   below entitled \"THE NEAT NEW FORMAT COMMAND\" for further info.\r\n\r\n[-g]     : This option makes linux_logo display the system_info only.\r\n           [Note.. this option only works in banner mode].  This is\r\n\t   useful if you have your own, better, ansi logo and you don't\r\n\t   want to mess with include files.  Just\r\n\t   \"cat My_Logo >> out; linux_logo -g >> out\" to get your logo with\r\n\t   my sysinfo.\r\n\r\n[-h]     : This simply displays the help screen, which is much less verbose\r\n           than this write-up.\r\n\r\n[-i]     : linux_logo will look in ~/.linux_logo and /etc/linux_logo.conf\r\n           for information on how to run linux_logo.  If the -i option\r\n\t   is passed, linux_logo will ignore those files\r\n\r\n[-k]    :  keep sysinfo flushed-left (non-centered)\r\n\r\n           In older versions of Linux_logo this modified how the logo\r\n\t   looked, I apologize for re-using the command-line option,\r\n\t   but there are only so many letters of the alphabet.\r\n\r\n\t   \t   \r\n[-l]     : This option displays the logo only [Only works in banner mode].\r\n           This is useful if for whatever reason you don't want to see the\r\n\t   system info.\r\n\r\n[-L num | NAME | list | random_xy]:  This option is used to manipulate compiled-in\r\n           custom logos.  As of linux_logo 3.9 you can compile in an\r\n\t   arbitrary amount of logos, although the default is to just have\r\n\t   the original and banner logos.\r\n\t   \r\n\t   \"-L list\" will list all of the logos available\r\n\t   \"-L NAME\" will display the logo with name NAME.\r\n\t       the names available can be seen with the \"-L list\" command\r\n\t   \"-L num\" will display logo number num, where the number is\r\n\t       obtained using the \"-L list\" command\r\n\t   \"-L random_xy\" will pick a logo at random, with criteria xy.\r\n\t       When you replace x with the letter:\r\n\t          b : pick a random banner mode logo\r\n                  c : pick a random classic mode logo\r\n                  e : pick a logo from either banner or classic\r\n\t       When you replace y with the letter:\r\n\t          a: pick a random ascii logo\r\n\t\t  n: pick a non-ascii logo\r\n\t\t  e: pick either type of logo\r\n\t       So to summarize \"-L random_ba\" picks a random ascii banner,\r\n\t                       \"-L random_ce\" picks a random classic logo\r\n\t\t\t       \"-L random_ee\" picks any logo, etc, etc\r\n\t\t\t       \r\n\t   See README.CUSTOM_LOGOS for more info\r\n\t   \r\n[-n]     : This option has been removed from linux_logo 3.9 and above.\r\n           If you want to create a logo that looks different than the\r\n\t   default, read README.CUSTOM_LOGOS.\r\n\r\n[-o Num] : This option will offset the logo towards the right of the screen\r\n           Num spaces.\r\n\r\n[-p]     : This option preserves the position of the cursor on the screen\r\n           while drawing the logo under it.\r\n\t   \r\n[-rX]    : This option has been removed from linux_logo 3.9 and above.\r\n           If you want to create a logo that looks different than the\r\n\t   default, read README.CUSTOM_LOGOS.\r\n\r\n[-s]     : This option skips the bogomips test on non-linux ports.  On \r\n           platforms that don't have the bogomips value in a /proc file,\r\n\t   linux_logo calculates the value itself using a GPL'd routine.\r\n\t   This can take a while, especially on slower machines, so it can\r\n\t   be disabled.\r\n\t   \r\n[-t str] : This option displays user-supplied string (for example,\r\n           Red Hat release or welcome...')  in first line of system info.\r\n           See the \"Things to do\" section for ways to use this.\r\n\t   \r\n[-u]     : This option displays the uptime along with the other system\r\n           information.  While useless when putting logos in issue or motd\r\n\t   files, this option comes in handy if you are using linux_logo\r\n\t   to impress your friends.  Also, when used in conjunction with\r\n\t   the -g option, you can use linux_logo in Server-Side includes\r\n\t   in web pages.\r\n\t   \r\n[-v]     : This option displays the version of linux_logo you are using.\r\n\r\n[-w Num] : Use this option to set the width of the screen.  It helps in trying\r\n           to center the banner mode. Default is 80 columns.\r\n\t   \r\n[-x]     : This option has been removed from linux_logo 3.9 and above.\r\n           If you want to create a logo that is narrower than the\r\n\t   default, read README.CUSTOM_LOGOS.\r\n\t   \r\n[-y]     : Display the load average.  [Yes I have just about run out of\r\n           letters to use as command line options ;)]\r\n\r\n--------------------------------------------------------------------------->\r\nTROUBLESHOOTING\r\n--------------------------------------------------------------------------->\r\n\r\nKnow bugs: \r\n  \r\n      Different architectures have odd /proc files.  If you send me\r\n      a copy of relevant files (/proc/cpuinfo and /proc/version usually)\r\n      I can see about adding support.\r\n      \r\n      On non-Linux platforms the BogoMips check can be quite slow.  To skip\r\n         it use \"linux_logo -s\"\r\n      \r\n      To make easy updates to ansi files with difficult editors, \r\n         the combination ^[ is read as the ESC code (#27 decimal)\r\n\t so this combination cannot be used in a picture.\r\n\t \r\n------------------------------------------------------------------------>\r\nTHE NEAT FORMAT COMMAND\r\n------------------------------------------------------------------------>\r\nThese are instructions on how to use the Format command added in Linux Logo 3.0\r\n\r\nThe command line argument is -F.  \r\n\r\nSpecial sequences start with \"#\" use \"##\" to make the \"#\" sign.  All other\r\ncharacters [except \"\\n\", the carriage return] are printed as is.\r\n\r\nSpecial      Stands For                          Example\r\n________________________________________________________________\r\n  #B     Bogomips                            \"374.37\"\r\n  #C     Compiled Date                       \"#47 Fri Jan 8 10:37:09 EST 1999\"\r\n  #E     User Text [given with the -t]       \"Given with -t option\"\r\n  #H     Hostname                            \"deranged\"\r\n  #L     Load average                        \"Load average 0.04, 0.01, 0.01\"\r\n  #M     Megahertz [where supported]         \"188Mhz \"\r\n  #N     Number of CPU's                     \"Two\"\r\n  #O     Operating System Name               \"Linux\"\r\n  #P     Singular or Plural of \"Processor\"   \"Processor\"\r\n  #R     Ram [in Megabytes]                  \"64M\"\r\n  #S     Plural                              \"s\"\r\n  #T     Type of CPU                         \"K6\"\r\n  #U     Uptime                              \"Uptime 10 hours 59 minutes\"\r\n  #V     Version of OS                       \"2.2.0-pre5\"\r\n  #X     CPU Vendor                          \"AMD \"\r\n  \\n     carriage return\r\n\r\n\r\nNotes:\r\n  + The letter after the # must be capitalized.\r\n  + Options not available are silently ignored.\r\n  + Megahertz only available on some platforms and newer kernels.\r\n  + See \"defaults.h\" on how to have #N report in non-english numbers.\r\n  + Plural [#S] gives nothing if there is 1 cpu, gives 's' otherwise.\r\n  + Processor [#P] gives \"Processor\" [or i18n equiv] when 1 cpu,\r\n    \"Processors\" if more than 1.\r\n  + The \"-y\" and \"-u\" [display uptime and load average] command line options\r\n    don't affect the output if a custom format is used.\r\n      \r\n      \r\nFor example the default banner format is\r\n\"#O Version #V, Compiled #C\\n#N #M#X#T #P, #R RAM, #B Bogomips Total\\n#H\\n\"\r\n\r\nwhich on my computer gives an output of:\r\n       \r\n      Linux Version 2.2.0-pre5, Compiled #47 Fri Jan 8 10:37:09 EST 1999\r\n         One 188MHz AMD K6 Processor, 64M RAM, 374.37 Bogomips Total\r\n\t\t                    deranged\r\n\t\t\t\t\t\r\nAnother example would be\r\n  linux_logo -F \"Redhat Linux 5.2\\nKernel Version #V\\n#U\\n#L\\n\"\r\nwhich would give\r\n                                Redhat Linux 5.2\r\n\t\t\t    Kernel Version 2.2.0-pre5\r\n                            Uptime 11 hours 4 minutes\r\n                          Load average 0.00, 0.00, 0.00\r\n\t\t\t\r\nAs you can see, the possibilities are endless.\r\n\r\n\r\n------------------------------------------------------------------------>\r\nCREATING/USING CUSTOM LOGOS\r\n------------------------------------------------------------------------>\r\n  See the file README.CUSTOM_LOGOS for more than you ever wanted to know\r\n  about making and using your own logo files.\r\n     \r\n------------------------------------------------------------------------->\r\nWHERE TO GET LINUX_LOGO:\r\n------------------------------------------------------------------------->\r\n  http://www.deater.net/weave/vmwprod/linux_logo\r\n  http://sunsite.unc.edu/pub/Linux/logos/penguin/\r\n  \r\nCheck out other programs by me at http://www.deater.net/weave/vmwprod\r\n\r\n-------------------------------------------------------------------------->\r\nTHANKS\r\n-------------------------------------------------------------------------->\r\n\r\n   Many thanks to the people sending in patches and /proc/cpuinfo entries.\r\n   Without you linux_logo wouldn't work on so many machines.\r\n   \r\n   Special thanks to Kristina (KRG) and my friends John Clemens and Marie\r\n   Prosser.\r\n   \r\n-----------------\r\nVince\r\nvince _at_ deater.net\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}